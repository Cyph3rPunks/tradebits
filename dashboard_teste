<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- CSRF Token -->
    <meta name="csrf-token" content="IKJYu7O4PpWWk2qXze4QOhRLukQztezB77z5neXw">

    <title>Arbitrade</title>

    <!-- Scripts -->
    <script src="js/app.js"></script>
    <script src="js/jquery-3.3.1.js"></script>
    <script src="js/vue.js"></script>
    <script src="jQuery-Mask-Plugin-master/dist/jquery.mask.js"></script>
    <script src="js/axios.js"></script>



    <!-- Fonts -->
    
    

    <!-- Styles -->
    <link href="css/app.css" rel="stylesheet">
    <link href="css/custom.css" rel="stylesheet">
    <link href="fontawesome/css/all.css" rel="stylesheet">
</head>
<body>
    <div id="app">
        <nav class="navbar navbar-expand-md navbar-light navbar-laravel">
            <div class="container">
                <a class="navbar-brand" href="index.html">
                    <i class="fab fa-bitcoin"></i><span>Arbitrade v0.2</span>
                </a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <!-- Left Side Of Navbar -->
                    <ul class="navbar-nav mr-auto">

                    </ul>

                    <!-- Right Side Of Navbar -->
                    
                        
                        
                            
                                
                            
                            
                                
                                    
                                
                            
                        
                            
                                
                                    
                                

                                
                                    
                                       
                                                     
                                        
                                    

                                    
                                        
                                    
                                
                            
                        
                    
                </div>
            </div>
        </nav>

        <main class="py-4">
            <div class="container" id="app">
    <div class="row">
        <div class="col-md-6">
            <div class="card border-0 shadow-sm">
                <div class="card-header">
                    Instruções
                </div>
                <div class="card-body">

                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card border-0 shadow-sm">
                <div class="card-header">
                    Configuração
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 border-right">
                            <h5 class="card-title">Atualização automática</h5>
                            <span class="card-text">Informe um tempo para atualizar a plataforma.</span>
                            <br>
                            <span class="card-text">Ex: 1 minuto = 60</span>
                            <br>
                            <small>Maior que 10 segundos</small>
                            <br>
                            <div class="form-row">
                                <div class="col-md-12">
                                    <div class="input-group input-group-sm">
                                        <input type="number" min="1" max="120" class="form-control" placeholder="15" v-model="refresh">
                                        <div class="input-group-append">
                                            <span class="input-group-text" id="basic-addon2">segundos</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <h5 class="card-title">Retorno sobre investimento (ROI)</h5>
                            <span class="card-text">Informe abaixo o capital investido.</span>
                            <br>
                            <span class="card-text">Ex: R$50.000,93 = 50000.93</span>
                            <br>
                            <br>
                            <div class="form-row">
                                <div class="col-md-12">
                                    <div class="input-group input-group-sm">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text" id="inputGroup-sizing-sm">R$</span>
                                        </div>
                                        <input type="text" class="form-control money" v-model="investimento">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-md-6">
            <div class="row mb-2">
                <div class="col-md-6 mbfix">
                    <div class="card rounded-5 border-0 shadow-sm cotacao">
                        <div class="card-body">
                            <i class="fal fa-sync float-right ml-2" v-bind:class="[batEthBrlUpdate ? 'fa-spin' : '']" v-on:click="batEthBrlUpdate = !batEthBrlUpdate"></i>
                            <i class="fal fa-percent float-right" v-bind:class="{ 'green': batEthBrlPassiva }" v-on:click="batEthBrlPassiva = !batEthBrlPassiva"></i>
                            <h5 class="card-title">Bat Exchange <small class="card-subtitle mbfix text-muted">ETH/BRL</small></h5>
                            <div class="row">
                                <div class="col-md-6 border-right">
                                    <small class="font-weight-bold"><i class="far fa-usd-circle"></i></small>
                                    <input type="text" v-model="batEthBrl_ultimoPreco">
                                    <br>
                                    <small class="font-weight-bold"><i class="far fa-clock"></i></small>
                                    <small>{{ batEthBrl_data }}</small>
                                </div>
                                <div class="col-md-6">
                                    <small class="font-weight-bold"><i class="fas fa-arrow-to-top" style="color: green"></i></small>
                                    <small>{{ batEthBrl_maiorPreco }}</small>
                                    <br>
                                    <small class="font-weight-bold"><i class="fas fa-arrow-to-bottom" style="color: red"></i></small>
                                    <small>{{ batEthBrl_menorPreco }}</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 mbfix">
                    <div class="card rounded-5 border-0 shadow-sm cotacao">
                        <div class="card-body">
                            <i class="fal fa-sync float-right ml-2" v-bind:class="{ 'fa-spin': temEthBtcUpdate }" v-on:click="temEthBtcUpdate = !temEthBtcUpdate"></i>
                            <i class="fal fa-percent float-right" v-bind:class="{ 'green': temEthBtcPassiva }" v-on:click="temEthBtcPassiva = !temEthBtcPassiva"></i>
                            <h5 class="card-title">TemBTC  <small class="card-subtitle mbfix text-muted">ETH/BTC</small></h5>
                            <div class="row">
                                <div class="col-md-6 border-right">
                                    <small class="font-weight-bold"><i class="far fa-usd-circle"></i></small>
                                    <input type="text" v-model="temEthBtc_ultimoPreco">
                                    <br>
                                    <small class="font-weight-bold"><i class="far fa-clock"></i></small>
                                    <small>{{ temEthBtc_data }}</small>
                                </div>
                                <div class="col-md-6">
                                    <small class="font-weight-bold"><i class="fas fa-arrow-to-top" style="color: green"></i></small>
                                    <small>{{ temEthBtc_maiorPreco }}</small>
                                    <br>
                                    <small class="font-weight-bold"><i class="fas fa-arrow-to-bottom" style="color: red"></i></small>
                                    <small>{{ temEthBtc_menorPreco }}</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mbfix">
                    <div class="card rounded-5 border-0 shadow-sm cotacao">
                        <div class="card-body">
                            <i class="fal fa-sync float-right ml-2" v-bind:class="{ 'fa-spin': temBtcBrlUpdate }" v-on:click="temBtcBrlUpdate = !temBtcBrlUpdate"></i>
                            <i class="fal fa-percent float-right" v-bind:class="{ 'green': temBtcBrlPassiva }" v-on:click="temBtcBrlPassiva = !temBtcBrlPassiva"></i>
                            <h5 class="card-title">TemBTC  <small class="card-subtitle mbfix text-muted">BRL/BTC</small></h5>
                            <div class="row">
                                <div class="col-md-6 border-right">
                                    <small class="font-weight-bold"><i class="far fa-usd-circle"></i></small>
                                    <input type="text" v-model="temBtcBrl_ultimoPreco">
                                    <br>
                                    <small class="font-weight-bold"><i class="far fa-clock"></i></small>
                                    <small>{{ temBtcBrl_data }}</small>
                                </div>
                                <div class="col-md-6">
                                    <small class="font-weight-bold"><i class="fas fa-arrow-to-top" style="color: green"></i></small>
                                    <small>{{ temBtcBrl_maiorPreco }}</small>
                                    <br>
                                    <small class="font-weight-bold"><i class="fas fa-arrow-to-bottom" style="color: red"></i></small>
                                    <small>{{ temBtcBrl_menorPreco }}</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 mbfix">
                    <div class="card rounded-5 border-0 shadow-sm cotacao">
                        <div class="card-body">
                            <i class="fal fa-sync float-right ml-2" v-bind:class="{ 'fa-spin': negocieBtcBrlUpdate }" v-on:click="negocieBtcBrlUpdate = !negocieBtcBrlUpdate"></i>
                            <i class="fal fa-percent float-right" v-bind:class="{ 'green': negocieBtcBrlPassiva }" v-on:click="negocieBtcBrlPassiva = !negocieBtcBrlPassiva"></i>
                            <h5 class="card-title">NegocieCoins  <small class="card-subtitle mbfix text-muted">BTC/BRL</small></h5>
                            <div class="row">
                                <div class="col-md-6 border-right">
                                    <small class="font-weight-bold"><i class="far fa-usd-circle"></i></small>
                                    <input type="text" v-model="negocieBtcBrl_ultimoPreco">
                                    <br>
                                    <small class="font-weight-bold"><i class="far fa-clock"></i></small>
                                    <small>{{ negocieBtcBrl_data }}</small>
                                </div>
                                <div class="col-md-6">
                                    <small class="font-weight-bold"><i class="fas fa-arrow-to-top" style="color: green"></i></small>
                                    <small>{{ negocieBtcBrl_maiorPreco }}</small>
                                    <br>
                                    <small class="font-weight-bold"><i class="fas fa-arrow-to-bottom" style="color: red"></i></small>
                                    <small>{{ negocieBtcBrl_menorPreco }}</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-12">
                    <div class="card rounded-5 border-0 shadow-sm mbfix roi">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6 border-right">
                                    <h5 class="card-title">TemBTC -> NegocieCoins</h5>
                                    <small class="font-weight-bold"><i class="far fa-usd-circle"></i></small>
                                    
                                    <small>Spread: <span>{{ (negocieBtcBrl_ultimoPreco - temBtcBrl_ultimoPreco) | currencydecimal }}</span></small>
                                    <br>
                                    <small class="font-weight-bold"><i class="far fa-clock"></i></small>
                                    <br>
                                    <small></small>
                                    <div class="text-center p-4">
                                        <input type="text" v-model="lucroTemNegocie">
                                        <h6>R${{ temTotalCicloBR | currencydecimal }}</h6>
                                        <h6>R${{ temTotalCicloBR-investimento | currencydecimal }}</h6>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <h5 class="card-title">Bat -> NegocieCoins</h5>
                                    <small class="font-weight-bold"><i class="far fa-usd-circle"></i></small>
                                    <small>ETHBTC(Binance) <span>{{ binanceEthBtc_ultimoPreco }}</span></small>
                                    <br>
                                    <small class="font-weight-bold"><i class="far fa-usd-circle"></i></small>
                                    <small>ETHBTC(TemBTC) <span>{{ temEthBtc_ultimoPreco }}</span></small>
                                    <div class="text-center p-4">
                                        <input type="text" v-model="lucroBatNegocie">
                                        <h6>R${{ batTotalCicloBR | currencydecimal }}</h6>
                                        <h6>R${{ batTotalCicloBR-investimento | currencydecimal }}</h6>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row mbfix">
        <div class="col-md-12" style="height: 400px;">
        <!-- TradingView Widget BEGIN -->
        <div class="tradingview-widget-container shadow-sm">
        <div id="tradingview_btcusdt" style="height: 400px;"></div>
        
        </div>
        <!-- TradingView Widget END -->
        </div>
        </div>
    <div class="row mbfix">
    <div class="col-md-6" style="height: 400px;">
    <!-- TradingView Widget BEGIN -->
    <div class="tradingview-widget-container shadow-sm">
    <div id="tradingview_ethusdt" style="height: 400px;"></div>
    
    </div>
    <!-- TradingView Widget END -->
    </div>
    <div class="col-md-6" style="height: 400px;">
    <!-- TradingView Widget BEGIN -->
    <div class="tradingview-widget-container shadow-sm">
    <div id="tradingview_ethbtc" style="height: 400px;"></div>
    
    </div>
    <!-- TradingView Widget END -->
    </div>
    </div>
</div>
        </main>
    </div>
        <script>

        // let toFloat = str => parseFloat(str.replace(',', '.'));
        $('.money').mask("#.##0,00", {reverse: true});

        function getFloat(str) {
            return parseFloat(str.toString().replace(',', '.'));
        }

        function getTime(time) {
            hora = new Date(time * 1000).toLocaleTimeString();
            return hora;
        }


        new Vue({

            el:'#app',
            data : {
                timer: '',
                refresh: 15,

                totalBtc: 0,
                investimento: 100000,
                precoBtcTem: null,
                precoBtcNegocie: null,
                comissao: 0.005,
                taxa: 0,
                txTransferenciaBtc: 0.0003,
                batTotalCicloBR: 0,
                temTotalCicloBR: 0,

                totalEth: 0,
                totalBr: 0,

                batEthBrlUpdate: true,
                batEthBrlPassiva: false,
                batEthBrl_ultimoPrecoPin: false,
                batEthBrl_ultimoPreco: null,
                batEthBrl_data: null,
                batEthBrl_maiorPreco: null,
                batEthBrl_menorPreco: null,

                temEthBtcUpdate: true,
                temEthBtcPassiva: false,
                temEthBtc_ultimoPrecoPin: false,
                temEthBtc_ultimoPreco: null,
                temEthBtc_data: null,
                temEthBtc_maiorPreco: null,
                temEthBtc_menorPreco: null,

                temBtcBrlUpdate: true,
                temBtcBrlPassiva: false,
                temBtcBrl_ultimoPrecoPin: false,
                temBtcBrl_ultimoPreco: null,
                temBtcBrl_data: null,
                temBtcBrl_maiorPreco: null,
                temBtcBrl_menorPreco: null,

                negocieBtcBrlUpdate: true,
                negocieBtcBrlPassiva: false,
                negocieBtcBrl_ultimoPrecoPin: false,
                negocieBtcBrl_ultimoPreco: null,
                negocieBtcBrl_data: null,
                negocieBtcBrl_maiorPreco: null,
                negocieBtcBrl_menorPreco: null,

                binanceEthBtc_ultimoPreco: null
            },
            // data () {
            //     return {
            //         refresh: 15,
            //
            //         batEthBrl_ultimoPreco: null,
            //         batEthBrl_data: null,
            //         batEthBrl_maiorPreco: null,
            //         batEthBrl_menorPreco: null,
            //
            //         temEthBtc_ultimoPreco: null,
            //         temEthBtc_data: null,
            //         temEthBtc_maiorPreco: null,
            //         temEthBtc_menorPreco: null,
            //
            //         temBtcBrl_ultimoPreco: null,
            //         temBtcBrl_data: null,
            //         temBtcBrl_maiorPreco: null,
            //         temBtcBrl_menorPreco: null,
            //
            //         negocieBtcBrl_ultimoPreco: null,
            //         negocieBtcBrl_data: null,
            //         negocieBtcBrl_maiorPreco: null,
            //         negocieBtcBrl_menorPreco: null
            //     }
            // },

            methods: {
                getTickers(){
                    var that = this;
                    axios.all([
                        axios.get('https://broker.batexchange.com.br/api/v3/ethbrl/ticker'),
                        axios.get('https://broker.tembtc.com.br/api/v3/ethbtc/ticker'),
                        axios.get('https://broker.tembtc.com.br/api/v3/btcbrl/ticker'),
                        axios.get('https://broker.negociecoins.com.br/api/v3/btcbrl/ticker'),
                        // axios.get('https://api.binance.com/api/v1/ticker/price?symbol=ETHBTC', {crossorigin:true})
                        // axios.get('https://api.binance.com/api/v1/ticker/price?symbol=ETHBTC', {withCredentials: true})
                    ])
                        .then(
                            axios.spread(
                                function (getBatEthBrl, getTemEthBtc, getTemBtcBrl, getNegocieBtcBrl) {
                                    if (that.batEthBrlUpdate === true) {
                                        that.batEthBrl_ultimoPreco = getBatEthBrl.data.last,
                                        that.batEthBrl_data = getTime(getBatEthBrl.data.date),
                                        that.batEthBrl_maiorPreco = getBatEthBrl.data.high,
                                        that.batEthBrl_menorPreco = getBatEthBrl.data.low
                                    }
                                    if (that.temEthBtcUpdate === true) {
                                        that.temEthBtc_ultimoPreco = getTemEthBtc.data.last,
                                        that.temEthBtc_data = getTime(getTemEthBtc.data.date),
                                        that.temEthBtc_maiorPreco = getTemEthBtc.data.high,
                                        that.temEthBtc_menorPreco = getTemEthBtc.data.low
                                    }

                                    if (that.temBtcBrlUpdate === true) {
                                        that.temBtcBrl_ultimoPreco = getTemBtcBrl.data.last,
                                        that.temBtcBrl_data = getTime(getTemBtcBrl.data.date),
                                        that.temBtcBrl_maiorPreco = getTemBtcBrl.data.high,
                                        that.temBtcBrl_menorPreco = getTemBtcBrl.data.low
                                    }
                                    if (that.negocieBtcBrlUpdate === true) {
                                        that.negocieBtcBrl_ultimoPreco = getNegocieBtcBrl.data.last,
                                        that.negocieBtcBrl_data = getTime(getNegocieBtcBrl.data.date),
                                        that.negocieBtcBrl_maiorPreco = getNegocieBtcBrl.data.high,
                                        that.negocieBtcBrl_menorPreco = getNegocieBtcBrl.data.low
                                    }


                                    // that.binanceEthBtc_ultimoPreco = getNegocieBtcBrl.data.price
                                }
                            ))

                },
                refreshTickers() {
                    this.getTickers();
                    this.time = setInterval(() => {
                        this.getTickers();
                    }, (this.refresh)*1000);
                },
                cancelRefresh: function() {
                    clearInterval(this.time);
                },

            },
            watch: {
                refresh: function(value) {
                    if (value >= 10) {
                        this.refresh = value;
                        this.cancelRefresh();
                        this.refreshTickers();
                    } else {
                        this.refresh = 15;
                        this.cancelRefresh();
                        this.refreshTickers();
                    }
                },
            },
            mounted: function() {
                this.refreshTickers();
            },
            beforeDestroy() {
                clearInterval(this.time)
            },

            filters: {
                currencydecimal(value) {
                    return value.toFixed(2)
                }
            },
            computed: {
                lucroTemNegocie: function(){
                    this.totalBtc = this.investimento/this.temBtcBrl_ultimoPreco;
                    this.temBtcBrlPassiva ? taxa = 0.003 : taxa = 0.005
                    this.comissao = this.totalBtc * taxa;
                    this.totalBtc = this.totalBtc - this.comissao;
                    this.txTransferenciaBtc = 0.0003;
                    this.totalBtc = this.totalBtc - this.txTransferenciaBtc;
                    this.totalBr = this.totalBtc * this.negocieBtcBrl_ultimoPreco;
                    this.negocieBtcBrlPassiva ? taxa = 0.003 : taxa = 0.005
                    this.comissao = this.totalBr * taxa;


                    this.totalBr = this.totalBr - this.comissao;
                    this.txTransferenciaBr = this.totalBr * 0.005;
                    this.temTotalCicloBR = this.totalBr - this.txTransferenciaBr;
                    this.lucroP = (1 - (this.investimento/this.temTotalCicloBR)) * 100;
                    return this.lucroP.toFixed(4) + '%';
                },
                lucroBatNegocie: function(){
                    this.totalEth = this.investimento/this.batEthBrl_ultimoPreco;
                    this.batEthBrlPassiva ? taxa = 0.003 : taxa = 0.005
                    this.comissao = this.totalEth * taxa;
                    this.totalEth = this.totalEth - this.comissao;
                    this.txTransferenciaEth = 0.00001;

                    //TemBtc
                    this.totalEth = this.totalEth - this.txTransferenciaEth;
                    this.totalBtc = this.temEthBtc_ultimoPreco * this.totalEth;
                    this.temEthBtcPassiva ? taxa = 0.003 : taxa = 0.005
                    this.comissao = this.totalBtc * taxa;
                    this.totalBtc = this.totalBtc - this.comissao;
                    this.txTransferenciaBtc = 0.0003;

                    //Negocie
                    this.totalBtc = this.totalBtc - this.txTransferenciaBtc;
                    this.totalBr = this.totalBtc * this.negocieBtcBrl_ultimoPreco;
                    this.negocieBtcBrlPassiva ? taxa = 0.003 : taxa = 0.005
                    this.comissao = this.totalBr * taxa;
                    this.totalBr = this.totalBr - this.comissao;
                    this.txTransferenciaBr = this.totalBr * 0.005;
                    this.batTotalCicloBR = this.totalBr - this.txTransferenciaBr;
                    this.lucroP = (1 - (this.investimento/this.batTotalCicloBR)) * 100;
                    return this.lucroP.toFixed(4) + '%';
                }
            }

        });

    </script>
    <script type="text/javascript" src="https://s3.tradingview.com/tv.js"></script>
    <script type="text/javascript">
        new TradingView.widget(
            {
                "autosize": true,
                "symbol": "BINANCE:BTCUSDT",
                "interval": "1",
                "timezone": "Etc/UTC",
                "theme": "Light",
                "style": "1",
                "locale": "br",
                "toolbar_bg": "#f1f3f6",
                "enable_publishing": false,
                "allow_symbol_change": true,
                "studies": [
                    "MAExp@tv-basicstudies"
                ],
                "container_id": "tradingview_btcusdt"
            }
        );
    </script>
    <script type="text/javascript">
        new TradingView.widget(
            {
                "autosize": true,
                "symbol": "BINANCE:ETHUSDT",
                "interval": "1",
                "timezone": "Etc/UTC",
                "theme": "Light",
                "style": "1",
                "locale": "br",
                "toolbar_bg": "#f1f3f6",
                "enable_publishing": false,
                "allow_symbol_change": true,
                "studies": [
                    "MAExp@tv-basicstudies"
                ],
                "container_id": "tradingview_ethusdt"
            }
        );
    </script>
    <script type="text/javascript">
        new TradingView.widget(
            {
                "autosize": true,
                "symbol": "BINANCE:ETHBTC",
                "interval": "1",
                "timezone": "Etc/UTC",
                "theme": "Light",
                "style": "1",
                "locale": "br",
                "toolbar_bg": "#f1f3f6",
                "enable_publishing": false,
                "allow_symbol_change": true,
                "studies": [
                    "MAExp@tv-basicstudies"
                ],
                "container_id": "tradingview_ethbtc"
            }
        );
    </script>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-139398764-1"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', 'UA-139398764-1');
    </script>
</body>
</html>
